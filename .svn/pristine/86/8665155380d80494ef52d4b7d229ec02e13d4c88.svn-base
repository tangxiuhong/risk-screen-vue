<!--监测信息-历史数据-->
<template>
  <el-row>
    <div class="inputMargin">
      <el-autocomplete
        v-model="enteName"
        :fetch-suggestions="querySearchAsync"
        placeholder="请输入企业名称"
        @select="enteNameHandleSelect"
      ></el-autocomplete>

      <el-autocomplete
        v-model="persName"
        :fetch-suggestions="querySearchAsync"
        placeholder="请输入人员名称"
        @select="persNameHandleSelect"
      ></el-autocomplete>
    </div>

    <el-table
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">

      <el-table-column
        prop="enterpriseName"
        header-align="center"
        align="center"
        label="企业名称">
      </el-table-column>
      <el-table-column
        prop="contactAddress"
        header-align="center"
        align="center"
        label="设备名称">
      </el-table-column>
      <el-table-column
        prop="enterpriseId"
        header-align="center"
        align="center"
        label="设备状态">
      </el-table-column>
      <el-table-column
        prop="safePerson"
        header-align="center"
        align="center"
        label="区域">
      </el-table-column>
      <el-table-column
        prop="safePersonMobile"
        header-align="center"
        align="center"
        label="实时值">
      </el-table-column>
      <el-table-column
        prop="varName3"
        header-align="center"
        align="center"
        label="单位">
      </el-table-column>
      <el-table-column
        prop="varName4"
        header-align="center"
        align="center"
        label="数据时间">
      </el-table-column>
      <el-table-column
        prop="address"
        header-align="center"
        align="center"
        width="200"
        label="报警级别">
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
  </el-row>

</template>
<script>
  export default {
    name: 'moniInfo-histData',
    data () {
      return {
        dataForm: {
          enterpriseId: ''
        },
        visible: false,
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        restaurants: [],
        enteName: '',
        persName: '',
        timeout: null
      }
    },
    methods: {
      init (id) {
        this.visible = true
        this.dataForm.enterpriseId = id
        console.log('6 enterpriseId:' + this.enterpriseId)
        this.dataListLoading = true
        this.$http({
          url: this.$http.adornUrl('/riskCtrlAreaInfo/list'),
          method: 'get',
          params: this.$http.adornParams({
            'page': this.pageIndex,
            'limit': this.pageSize,
            'areaCode': 0,
            'riskLevel': 4
          })
        }).then(({data}) => {
          if (data && data.code === 0) {
            this.dataList = data.page.list
            this.totalPage = data.page.totalCount
          } else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
        })
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      loadAll () {
        return [
          { 'value': '三全鲜食（北新泾店）', 'address': '长宁区新渔路144号' },
          { 'value': 'Hot honey 首尔炸鸡（仙霞路）', 'address': '上海市长宁区淞虹路661号' }
        ]
      },
      querySearchAsync (queryString, cb) {
        var restaurants = this.restaurants
        var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants

        clearTimeout(this.timeout)
        this.timeout = setTimeout(() => {
          cb(results)
        }, 1000 * Math.random())
      },
      createStateFilter (queryString) {
        return (state) => {
          return (state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0)
        }
      },
      enteNameHandleSelect (item) {
        console.log(item)
      }
    },
    mounted () {
      this.restaurants = this.loadAll()
    }
  }
</script>

<style>

</style>
